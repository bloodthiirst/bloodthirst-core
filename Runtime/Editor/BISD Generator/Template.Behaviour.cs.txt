using Assets.Scripts.Core.UnityPool;
using Bloodthirst.Core.BISD.CodeGeneration;
using Bloodthirst.Core.BISDSystem;
using UnityEngine;

namespace Assets.Scripts.Game.[MODELNAME]Model
{
    [BISDTag("[MODELNAME]" , ClassType.BEHAVIOUR)]
    public class [MODELNAME]Behaviour : EntityBehaviour<[MODELNAME]Data, [MODELNAME]State, [MODELNAME]Instance>
    {
        public override [MODELNAME]Instance Instance
        {
            get
            {
                return instance;
            }
            set
            {
                if (instance != null)
                {
                    InstanceRegister<[MODELNAME]Instance>.Unregister(instance);
                    instance.OnInstanceRemoved -= OnRemove;
                }

                instance = value;

                InstanceRegister<[MODELNAME]Instance>.Register(instance);
                instance.OnInstanceRemoved -= OnRemove;
                instance.OnInstanceRemoved += OnRemove;

                OnSetInstance(instance);

                instance.NotifyStateChange();
            }
        }

        public override void OnSetInstance([MODELNAME]Instance instance)
        {           

        }

        private void OnRemove([MODELNAME]Instance ins)
        {
            // TODO : do the actual behaviour , like invoking Destroy or sending back to the pool
            instance.OnInstanceRemoved -= OnRemove;
            instance = null;
        }

        private void OnDestroy()
        {
            if(Instance == null)
                return;

            instance.OnInstanceRemoved -= OnRemove;
            instance = null;
        }
    }
}
